export Pig=/usr/bin/pig

### DT: date the script is triggered
export DS_RUN=2015-08-05
#export DS_RUN=`date +%Y-%m-%d`
echo "DS_RUN=${DS_RUN}"
export DT=`date -d "1 day ago ${DS_RUN}" +%Y-%m-%d`

### campaign TYPE can be arbitrarily specified, like "plus", "FirstYear", "ThankYou", etc.
#export TYPE=plus/init
#export TYPE=ThankYou
TYPE="cnp_member"
export MEMBER_TYPE=overall
export PLUS_LEVEL=overall

### training / exclusion period
#export TargetMonth=11
#export DataStartT=2013-11-04
#export DataEndT=2014-11-05
#export ITEM_INFO_SNAPSHOT_DATE=2014-11-05
#export TargetMonth=3
export TargetMonth=`date -d "7 days ${DS_RUN}" +%m`
export DataStartT=`date -d "1 year ago ${DS_RUN}" +%Y-%m-%d`
export DataEndT=${DT}
export ITEM_INFO_SNAPSHOT_DATE=${DT}
export INVENTORY_SNAPSHOT_DATE=${DT}
export OBSOLETE_DATE=`date -d "3 days ago ${DS_RUN}" +%Y-%m-%d`

### cobought_type can be raw or cosine
export COB_TYPE=cosine


### member's cardholder bag generated by the reward propensity scoring pipeline
#export MemCombined=/user/hive/warehouse/mep_gec_modeling.db/sept_campaign_mem_with_compcards
#export MemCombined=/user/pythia/Workspaces/SamsMEP/MNScoring/Dec2014/init/2014-10-15/mem_with_compcards_unscrubbed

### subcat scope (4digit cat_subcat_nbr, for example, 0430)
#export StudySet=/user/hive/warehouse/jli21.db/common/study_subcats
export StudySet=/user/jli21/pythia/Workspaces/SamsMEP/reco/2014-08-20/study_subcats_holiday_v2

### Item Info Table
#export ItemInfoTbl=Common_transaction_model.item_dim
export ItemInfoTbl=sams_us_clubs.item_info_history

### Inventory Table
export InventoryHistTbl=sams_us_clubs.club_item_inventory_history

### Membership, Cardholder dim
export SamsMembershipDimTbl=customers.sams_us_clubs_sams_membership_dim
export SamsCardholderDimTbl=customers.sams_us_clubs_sams_mbr_cardholder_dim

export SRC_DIR=/home/jli21/project/reco/src/production/src
export TMP_DIR=/home/jli21/project/reco/tmp/${DT}
export LOG_DIR=/home/jli21/project/reco/log/${DT}


####### If the parameters are set correctly, the following parameters can be fixed.
export SRC_SUPPORT_DIR=${SRC_DIR}/support
export SRC_PREP_DIR=${SRC_DIR}/prep
export SRC_AGG_DIR=${SRC_DIR}/agg
export SRC_CORE_DIR=${SRC_DIR}/core
export SRC_POST_DIR=${SRC_DIR}/post
export SRC_OUTPUT_DIR=${SRC_DIR}/output

export TMP_SUPPORT_DIR=${TMP_DIR}/support
export TMP_PREP_DIR=${TMP_DIR}/prep
export TMP_AGG_DIR=${TMP_DIR}/agg
export TMP_CORE_DIR=${TMP_DIR}/core
export TMP_POST_DIR=${TMP_DIR}/post

export LOG_SUPPORT_DIR=${LOG_DIR}/support
export LOG_PREP_DIR=${LOG_DIR}/prep
export LOG_AGG_DIR=${LOG_DIR}/agg/${TYPE}
export LOG_CORE_DIR=${LOG_DIR}/core/${TYPE}_${COB_TYPE}
export LOG_POST_DIR=${LOG_DIR}/post/${TYPE}_${COB_TYPE}
export LOG_OUTPUT_DIR=${LOG_DIR}/output/${TYPE}_${COB_TYPE}

export TOUCH1=${LOG_DIR}/${TYPE//\//_}_touch1
export TOUCH2=${LOG_DIR}/${TYPE//\//_}_touch2
export TOUCH3=${LOG_DIR}/${TYPE//\//_}_touch3_${COB_TYPE}
export TOUCH4=${LOG_DIR}/${TYPE//\//_}_touch4_${COB_TYPE}
export TOUCH5=${LOG_DIR}/${TYPE//\//_}_touch5_${COB_TYPE}
export TOUCH6=${LOG_DIR}/${TYPE//\//_}_touch6_${COB_TYPE}
export TOUCH7=${LOG_DIR}/${TYPE//\//_}_touch7_${COB_TYPE}
export TOUCH_MEMBERSHIP_OUTPUT=${LOG_DIR}/touch_membership_output
export TOUCH_CARDHOLDER_OUTPUT=${LOG_DIR}/touch_cardholder_output
export TOUCH_WMX_OUTPUT=${LOG_DIR}/touch_wmx_output
export TOUCH_ISB_CARDHOLDER_OUTPUT=${LOG_DIR}/touch_isb_cardholder_output

### Database that stores temp table
export Database=jli21

### remind scope; these dates will be automatically generated based on the TargetMonth.
#export DateLB=2012-12-01
#export DateUB=2014-05-31
#export SPLB=2012-08-01
#export SPUB=2012-08-31
#export SplitDate=2013-06-01
year=`date +%Y -d $DT`
month=`date +%m -d $DT`
lastMonthYr=`date -d "1 month ago ${DS_RUN}"  +%Y`
lastMonthMon=`date -d "1 month ago ${DS_RUN}"  +%m`
export SeasonalityEndDate=${lastMonthYr}"-"${lastMonthMon}"-01"
export SeasonalityStartDate=`date -d "360 days ago ${SeasonalityEndDate}" +%Y-%m-%d`
echo SeasonalityStartDate=${SeasonalityStartDate}
echo SeasonalityEndDate=${SeasonalityEndDate}
echo $month
echo $TargetMonth
if [[ $month -gt $TargetMonth ]]; then year=$((year+1-2)); else year=$((year-2)); fi
export DateUB=$DataEndT
export DataStartTts=`date -d $DataStartT +"%s"`
#extend 30 day remind; 13 months
export DateLBts=$((DataStartTts- 24*3600*30));
export DateLB=`date -d@"$DateLBts" +%Y-%m-%d`;
export SplitDate=$DataStartT
export SPLB=${year}-${month}-01
export SPUB=${year}-${month}-31
export yearSeasonality=$((year+1))
